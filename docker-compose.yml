version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: smap-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD:-admin123}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE:-smap_keyword_extraction}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - smap-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: smap-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST:-/}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - smap-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 5

  # API Service
  api:
    build:
      context: .
      dockerfile: cmd/api/Dockerfile
    container_name: smap-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # Application
      APP_NAME: ${APP_NAME:-SMAP Keyword Extraction}
      APP_VERSION: ${APP_VERSION:-1.0.0}
      ENVIRONMENT: ${ENVIRONMENT:-development}
      DEBUG: ${DEBUG:-True}
      
      # API
      API_HOST: ${API_HOST:-0.0.0.0}
      API_PORT: ${API_PORT:-8000}
      API_RELOAD: ${API_RELOAD:-False}
      
      # MongoDB
      MONGODB_URL: mongodb://${MONGODB_ROOT_USER:-admin}:${MONGODB_ROOT_PASSWORD:-admin123}@mongodb:27017
      MONGODB_DATABASE: ${MONGODB_DATABASE:-smap_keyword_extraction}
      MONGODB_MIN_POOL_SIZE: ${MONGODB_MIN_POOL_SIZE:-10}
      MONGODB_MAX_POOL_SIZE: ${MONGODB_MAX_POOL_SIZE:-100}
      
      # RabbitMQ
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: ${RABBITMQ_PORT:-5672}
      RABBITMQ_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-guest}
      RABBITMQ_VHOST: ${RABBITMQ_VHOST:-/}
      RABBITMQ_QUEUE_NAME: ${RABBITMQ_QUEUE_NAME:-keyword_extraction_queue}
      RABBITMQ_EXCHANGE_NAME: ${RABBITMQ_EXCHANGE_NAME:-keyword_extraction_exchange}
      RABBITMQ_ROUTING_KEY: ${RABBITMQ_ROUTING_KEY:-keyword.extraction}
      
      # Scheduler
      SCHEDULER_TIMEZONE: ${SCHEDULER_TIMEZONE:-Asia/Ho_Chi_Minh}
    volumes:
      - ./logs:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - smap-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Queue Consumer Service
  queue:
    build:
      context: .
      dockerfile: cmd/queue/Dockerfile
    container_name: smap-queue
    restart: unless-stopped
    environment:
      # Application
      APP_NAME: ${APP_NAME:-SMAP Keyword Extraction}
      ENVIRONMENT: ${ENVIRONMENT:-development}
      DEBUG: ${DEBUG:-True}
      
      # MongoDB
      MONGODB_URL: mongodb://${MONGODB_ROOT_USER:-admin}:${MONGODB_ROOT_PASSWORD:-admin123}@mongodb:27017
      MONGODB_DATABASE: ${MONGODB_DATABASE:-smap_keyword_extraction}
      MONGODB_MIN_POOL_SIZE: ${MONGODB_MIN_POOL_SIZE:-10}
      MONGODB_MAX_POOL_SIZE: ${MONGODB_MAX_POOL_SIZE:-100}
      
      # RabbitMQ
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: ${RABBITMQ_PORT:-5672}
      RABBITMQ_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-guest}
      RABBITMQ_VHOST: ${RABBITMQ_VHOST:-/}
      RABBITMQ_QUEUE_NAME: ${RABBITMQ_QUEUE_NAME:-keyword_extraction_queue}
      RABBITMQ_EXCHANGE_NAME: ${RABBITMQ_EXCHANGE_NAME:-keyword_extraction_exchange}
      RABBITMQ_ROUTING_KEY: ${RABBITMQ_ROUTING_KEY:-keyword.extraction}
    volumes:
      - ./logs:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - smap-network
    deploy:
      replicas: 2  # Run 2 instances for load balancing

  # Scheduler Service
  scheduler:
    build:
      context: .
      dockerfile: cmd/scheduler/Dockerfile
    container_name: smap-scheduler
    restart: unless-stopped
    environment:
      # Application
      APP_NAME: ${APP_NAME:-SMAP Keyword Extraction}
      ENVIRONMENT: ${ENVIRONMENT:-development}
      DEBUG: ${DEBUG:-True}
      
      # MongoDB
      MONGODB_URL: mongodb://${MONGODB_ROOT_USER:-admin}:${MONGODB_ROOT_PASSWORD:-admin123}@mongodb:27017
      MONGODB_DATABASE: ${MONGODB_DATABASE:-smap_keyword_extraction}
      MONGODB_MIN_POOL_SIZE: ${MONGODB_MIN_POOL_SIZE:-10}
      MONGODB_MAX_POOL_SIZE: ${MONGODB_MAX_POOL_SIZE:-100}
      
      # RabbitMQ
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: ${RABBITMQ_PORT:-5672}
      RABBITMQ_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-guest}
      RABBITMQ_VHOST: ${RABBITMQ_VHOST:-/}
      RABBITMQ_QUEUE_NAME: ${RABBITMQ_QUEUE_NAME:-keyword_extraction_queue}
      RABBITMQ_EXCHANGE_NAME: ${RABBITMQ_EXCHANGE_NAME:-keyword_extraction_exchange}
      RABBITMQ_ROUTING_KEY: ${RABBITMQ_ROUTING_KEY:-keyword.extraction}
      
      # Scheduler
      SCHEDULER_TIMEZONE: ${SCHEDULER_TIMEZONE:-Asia/Ho_Chi_Minh}
    volumes:
      - ./logs:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - smap-network

networks:
  smap-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  rabbitmq_data:
    driver: local

